{"version":3,"sources":["redux/types.js","redux/likesReducer.js","redux/inputReducer.js","redux/commentsReducer.js","redux/appReducer.js","redux/rootReducer.js","components/Likes.js","redux/actions.js","components/Title.js","components/SingleComment.js","components/Comments.js","components/Spin.js","App.js","index.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENT_CREATE","COMMENT_UPDATE","COMMENT_DELETE","COMMENTS_LOAD","LOADER_DISPLAY_ON","LOADER_DISPLAY_OFF","initialState","likes","likesReducer","state","action","type","text","inputReducer","payload","comments","commentsReducer","commentsNew","map","res","id","_id","itemIndex","findIndex","nextComments","slice","loading","error","appReducer","rootReducer","combineReducers","connect","dispatch","onIncrementLikes","onDecrementLikes","props","className","onClick","Title","useDispatch","useSelector","onChange","event","inputText","target","value","placeholder","SingleComment","data","useState","commentText","setCommentText","useEffect","onSubmit","preventDefault","commentUpdate","commentDelete","hidden","Comments","textComment","setTextComment","a","fetch","response","json","jsonData","uniqid","commentCreate","length","Spin","spinner","color","height","width","App","src","alt","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.790148e3.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const INPUT_TEXT = 'INPUT_TEXT';\r\nexport const COMMENT_CREATE = 'COMMENT_CREATE';\r\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE';\r\nexport const COMMENT_DELETE = 'COMMENT_DELETE';\r\n\r\nexport const COMMENTS_LOAD = 'COMMENTS_LOAD';\r\nexport const LOADER_DISPLAY_ON = 'LOADER_DISPLAY_ON';\r\nexport const LOADER_DISPLAY_OFF = 'LOADER_DISPLAY_OFF';\r\n","import {INCREMENT, DECREMENT} from \"./types\";\r\n\r\n\r\nconst initialState = {\r\n    likes: 0\r\n}\r\n\r\n\r\nconst likesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INCREMENT:\r\n            return {...state, likes: state.likes + 1}\r\n\r\n        case DECREMENT:\r\n            return {...state, likes: state.likes - 1}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default likesReducer;","import {INPUT_TEXT} from \"./types\";\r\n\r\n\r\nconst initialState = {\r\n    text: ''\r\n}\r\n\r\n\r\nconst inputReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case INPUT_TEXT:\r\n            return {...state, text: action.payload}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default inputReducer;","import {COMMENT_CREATE, COMMENT_DELETE, COMMENT_UPDATE, COMMENTS_LOAD} from \"./types\";\r\n\r\n\r\nconst initialState = {\r\n    comments: []\r\n}\r\n\r\n\r\nconst commentsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case COMMENT_CREATE:\r\n            return {...state, comments: [...state.comments, action.payload]}\r\n\r\n        case COMMENTS_LOAD:\r\n            const commentsNew = action.payload.map(res => {\r\n                return {\r\n                    text: res.text,\r\n                    id: res._id\r\n                }\r\n            })\r\n            return {...state, comments: commentsNew}\r\n\r\n        case COMMENT_UPDATE:\r\n            const { payload } = action;\r\n            const { comments } = state;\r\n            const itemIndex = comments.findIndex(res => res.id === payload.id)\r\n\r\n            const nextComments = [\r\n                ...comments.slice(0, itemIndex),\r\n                payload,\r\n                ...comments.slice(itemIndex + 1)\r\n            ];\r\n\r\n            return {\r\n                ...state,\r\n                comments: nextComments\r\n            }\r\n\r\n            case COMMENT_DELETE:\r\n            return (() => {\r\n                const { payload } = action;\r\n                const { comments } = state;\r\n                const itemIndex = comments.findIndex(res => res.id === payload)\r\n\r\n                const nextComments = [\r\n                    ...comments.slice(0, itemIndex),\r\n                    ...comments.slice(itemIndex + 1)\r\n                ];\r\n\r\n                return {\r\n                    ...state,\r\n                    comments: nextComments\r\n                }\r\n            })();\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default commentsReducer;","import {LOADER_DISPLAY_ON, LOADER_DISPLAY_OFF} from \"./types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case LOADER_DISPLAY_ON:\r\n            return {...state, loading: true}\r\n\r\n        case LOADER_DISPLAY_OFF:\r\n            return {...state, loading: false}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default appReducer;","import {combineReducers} from \"redux\";\r\nimport likesReducer from \"./likesReducer\";\r\nimport inputReducer from \"./inputReducer\";\r\nimport commentsReducer from \"./commentsReducer\";\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    likesReducer,\r\n    inputReducer,\r\n    commentsReducer,\r\n    appReducer,\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { incrementLikes, decrementLikes } from \"../redux/actions\";\r\n\r\n\r\nconst Likes = (props) => {\r\n    return (\r\n        <div className=\"button-controls\">\r\n\r\n            <button onClick={props.onIncrementLikes}>❤ {props.likes}</button>\r\n            <button onClick={props.onDecrementLikes}>Dislike</button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    const { likesReducer } = state;\r\n    return {\r\n        likes: likesReducer.likes\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n\r\n    return {\r\n        onIncrementLikes: () => dispatch(incrementLikes()),\r\n\r\n        onDecrementLikes: () => dispatch(decrementLikes())\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);","import {\r\n    INCREMENT,\r\n    DECREMENT,\r\n    INPUT_TEXT,\r\n    COMMENT_CREATE,\r\n    COMMENT_UPDATE,\r\n    COMMENT_DELETE,\r\n    COMMENTS_LOAD,\r\n    LOADER_DISPLAY_ON,\r\n    LOADER_DISPLAY_OFF,\r\n} from \"./types\";\r\n\r\nexport function incrementLikes() {\r\n    return {\r\n        type: INCREMENT\r\n    }\r\n}\r\n\r\nexport function decrementLikes() {\r\n    return {\r\n        type: DECREMENT\r\n    }\r\n}\r\n\r\nexport function inputText (text) {\r\n    return {\r\n        type: INPUT_TEXT,\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport function commentCreate (text, id) {\r\n    return {\r\n        type: COMMENT_CREATE,\r\n        payload: {text, id}\r\n    }\r\n}\r\n\r\nexport function commentUpdate (text, id) {\r\n    return {\r\n        type: COMMENT_UPDATE,\r\n        payload: {text, id}\r\n    }\r\n}\r\n\r\nexport function commentDelete (id) {\r\n    return {\r\n        type: COMMENT_DELETE,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport function commentsLoad () {\r\n    return async dispatch => {\r\n          dispatch(loaderOn())\r\n          const response = await fetch('https://cat-fact.herokuapp.com/facts/random?animal_type=cat&amount=9&max_length=15')\r\n          const jsonData = await response.json()\r\n          dispatch({\r\n              type: COMMENTS_LOAD,\r\n              payload: jsonData\r\n          });\r\n          dispatch(loaderOff())\r\n\r\n    }\r\n}\r\n\r\nexport function loaderOn () {\r\n    return {\r\n        type: LOADER_DISPLAY_ON,\r\n    }\r\n}\r\n\r\nexport function loaderOff () {\r\n    return {\r\n        type: LOADER_DISPLAY_OFF,\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {inputText} from \"../redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst Title = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const text = useSelector((state) => {\r\n        const { inputReducer } = state;\r\n        return inputReducer.text\r\n    })\r\n\r\n\r\n    const handleChange = (event) => {\r\n        dispatch(inputText(event.target.value))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='card-title'>\r\n            <div className='card-title-top'>\r\n                <input type='text' onChange={handleChange} placeholder='enter your title'/>\r\n            </div>\r\n            <p>{text}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport {useEffect, useState} from \"react\";\r\nimport {commentUpdate} from \"../redux/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {commentDelete} from \"../redux/actions\";\r\n\r\nconst SingleComment = ({ data }) => {\r\n    const [commentText, setCommentText] = useState('');\r\n    const { text, id } = data;\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (text) {\r\n            setCommentText(text)\r\n        }\r\n    }, [text]);\r\n\r\n    const handleInput = (event) => {\r\n        setCommentText(event.target.value)\r\n    }\r\n\r\n    const handleUpdate = (event) => {\r\n        event.preventDefault()\r\n        dispatch(commentUpdate(commentText, id))\r\n    }\r\n\r\n    const handleDelete = (event) => {\r\n        event.preventDefault();\r\n        dispatch(commentDelete(id))\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleUpdate} className='comments-item'>\r\n            <div className='comments-item-delete' onClick={handleDelete} >&times;</div>\r\n            <textarea type='text' value={commentText} onChange={handleInput}/>\r\n            <input type='submit' hidden/>\r\n\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SingleComment;","import React, {useState, useEffect} from 'react';\r\nimport SingleComment from \"./SingleComment\";\r\nimport {commentCreate, commentsLoad} from \"../redux/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport uniqid from 'uniqid'\r\n\r\nconst Comments = (props) => {\r\n    const [textComment, setTextComment] = useState('');\r\n    const dispatch = useDispatch();\r\n    const comments = useSelector(state => {\r\n        const {commentsReducer} = state;\r\n        return commentsReducer.comments;\r\n    })\r\n\r\n    const handleInput = (event) => {\r\n        setTextComment(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const id = uniqid();\r\n        dispatch(commentCreate(textComment, id));\r\n        setTextComment('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(commentsLoad())\r\n    },[]);\r\n\r\n    return (\r\n        <div className='card-comments'>\r\n            <form onSubmit={handleSubmit} className='comments-item-create'>\r\n                <input\r\n                    type='text'\r\n                    placeholder='push Enter to add your comment'\r\n                    value={textComment}\r\n                    onChange={handleInput}/>\r\n                <input type='submit' hidden/>\r\n            </form>\r\n            {!!comments.length && comments.map(res => <SingleComment key={res.id} data={res}/>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;","import React from 'react';\r\nimport Loader from 'react-loader-spinner'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Spin = (props) => {\r\n\r\n    const spinner = useSelector(state => state.appReducer.loading)\r\n\r\n    return (\r\n        <div className='loader-styles'>\r\n            {spinner && <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n            />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spin;","import './App.css';\nimport Likes from \"./components/Likes\";\nimport Title from \"./components/Title\";\nimport Comments from \"./components/Comments\";\nimport Spin from \"./components/Spin\";\nimport React from \"react\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n        <h1>Cat Facts</h1>\n        <Spin/>\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <img src=\"./cat.jpg\" alt=\"cat\"/>\n            <Title/>\n            <Likes/>\n          </div>\n          <Comments/>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from \"./redux/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport App from './App';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}